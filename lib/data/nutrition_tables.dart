import 'package:flutter/material.dart';
import '../generated/l10n.dart';
import '../models/feed_formula_model.dart';

class NutritionTables {
  final BuildContext context;

  NutritionTables(this.context);

  static final List<Map<String, dynamic>> weightRequirement = [
    {"weight": 100, "meReq": 17.00, "dm": 3.0},
    {"weight": 125, "meReq": 19.06, "dm": 3.75},
    {"weight": 150, "meReq": 22.00, "dm": 4.5},
    {"weight": 175, "meReq": 24.57, "dm": 5.25},
    {"weight": 200, "meReq": 27.00, "dm": 6.0},
    {"weight": 225, "meReq": 29.65, "dm": 6.75},
    {"weight": 250, "meReq": 31.00, "dm": 7.5},
    {"weight": 275, "meReq": 34.52, "dm": 8.25},
    {"weight": 300, "meReq": 36.00, "dm": 9.0},
    {"weight": 325, "meReq": 39.08, "dm": 9.75},
    {"weight": 350, "meReq": 40.00, "dm": 10.5},
    {"weight": 375, "meReq": 43.42, "dm": 11.25},
    {"weight": 400, "meReq": 45.00, "dm": 12.0},
    {"weight": 425, "meReq": 47.76, "dm": 12.75},
    {"weight": 450, "meReq": 49.00, "dm": 13.5},
    {"weight": 475, "meReq": 51.89, "dm": 14.25},
    {"weight": 500, "meReq": 54.00, "dm": 15.0},
    {"weight": 525, "meReq": 56.02, "dm": 15.75},
    {"weight": 550, "meReq": 59.00, "dm": 16.5},
    {"weight": 575, "meReq": 59.77, "dm": 17.25},
    {"weight": 600, "meReq": 63.00, "dm": 18.0},
  ];

  List<Map<String, dynamic>> get lactationStageRequirements {
    return [
      {
        "id": "dry",
        "name": S.of(context).lactationStageDry,
        "proteinReq": 12,
        "caReq": 0.40,
        "pReq": 0.20
      },
      {
        "id": "early",
        "name": S.of(context).lactationStageEarlyLactation,
        "proteinReq": 16,
        "caReq": 0.80,
        "pReq": 0.40
      },
      {
        "id": "mid",
        "name": S.of(context).lactationStageMidLactation,
        "proteinReq": 14,
        "caReq": 0.70,
        "pReq": 0.35
      },
      {
        "id": "late",
        "name": S.of(context).lactationStageLateLactation,
        "proteinReq": 12,
        "caReq": 0.40,
        "pReq": 0.20
      },
    ];
  }

  static final List<Map<String, dynamic>> agePregnancyRequirements = [
    {"pregnancyMonth": 0, "meReq": 0},
    {"pregnancyMonth": 1, "meReq": 0},
    {"pregnancyMonth": 2, "meReq": 0},
    {"pregnancyMonth": 3, "meReq": 0},
    {"pregnancyMonth": 4, "meReq": 0},
    {"pregnancyMonth": 5, "meReq": 0},
    {"pregnancyMonth": 6, "meReq": 8},
    {"pregnancyMonth": 7, "meReq": 10},
    {"pregnancyMonth": 8, "meReq": 15},
    {"pregnancyMonth": 9, "meReq": 20},
  ];

  static final Map<double, Map<double, double>> energyProteinRequirements = {
    3.0: {
      2.6: 4.50,
      2.7: 4.50,
      2.8: 4.50,
      2.9: 4.55,
      3.0: 4.60,
      3.1: 4.65,
      3.2: 4.70,
      3.3: 4.75,
      3.4: 4.80,
      3.5: 4.80,
      3.6: 4.80
    },
    3.1: {
      2.6: 4.55,
      2.7: 4.55,
      2.8: 4.60,
      2.9: 4.60,
      3.0: 4.65,
      3.1: 4.70,
      3.2: 4.75,
      3.3: 4.80,
      3.4: 4.85,
      3.5: 4.85,
      3.6: 4.90
    },
    3.2: {
      2.6: 4.60,
      2.7: 4.65,
      2.8: 4.70,
      2.9: 4.70,
      3.0: 4.70,
      3.1: 4.75,
      3.2: 4.80,
      3.3: 4.85,
      3.4: 4.90,
      3.5: 4.95,
      3.6: 5.00
    },
    3.3: {
      2.6: 4.65,
      2.7: 4.69,
      2.8: 4.73,
      2.9: 4.77,
      3.0: 4.81,
      3.1: 4.85,
      3.2: 4.85,
      3.3: 4.93,
      3.4: 4.95,
      3.5: 5.01,
      3.6: 5.05
    },
    3.4: {
      2.6: 4.70,
      2.7: 4.75,
      2.8: 4.80,
      2.9: 4.85,
      3.0: 4.90,
      3.1: 4.93,
      3.2: 4.90,
      3.3: 4.95,
      3.4: 5.00,
      3.5: 5.09,
      3.6: 5.10
    },
    3.5: {
      2.6: 4.80,
      2.7: 4.84,
      2.8: 4.88,
      2.9: 4.92,
      3.0: 4.96,
      3.1: 5.00,
      3.2: 5.04,
      3.3: 5.08,
      3.4: 5.08,
      3.5: 5.15,
      3.6: 5.16
    },
    3.6: {
      2.6: 4.90,
      2.7: 4.90,
      2.8: 4.90,
      2.9: 5.00,
      3.0: 5.00,
      3.1: 5.08,
      3.2: 5.10,
      3.3: 5.16,
      3.4: 5.10,
      3.5: 5.15,
      3.6: 5.20
    },
    3.7: {
      2.6: 4.95,
      2.7: 4.99,
      2.8: 5.01,
      2.9: 5.07,
      3.0: 5.07,
      3.1: 5.15,
      3.2: 5.13,
      3.3: 5.23,
      3.4: 5.19,
      3.5: 5.20,
      3.6: 5.25
    },
    3.8: {
      2.6: 5.00,
      2.7: 5.07,
      2.8: 5.10,
      2.9: 5.17,
      3.0: 5.10,
      3.1: 5.15,
      3.2: 5.20,
      3.3: 5.33,
      3.4: 5.30,
      3.5: 5.30,
      3.6: 5.30
    },
    3.9: {
      2.6: 5.05,
      2.7: 5.14,
      2.8: 5.11,
      2.9: 5.27,
      3.0: 5.17,
      3.1: 5.20,
      3.2: 5.23,
      3.3: 5.43,
      3.4: 5.29,
      3.5: 5.30,
      3.6: 5.35
    },
    4.0: {
      2.6: 5.10,
      2.7: 5.19,
      2.8: 5.20,
      2.9: 5.19,
      3.0: 5.30,
      3.1: 5.25,
      3.2: 5.30,
      3.3: 5.31,
      3.4: 5.40,
      3.5: 5.42,
      3.6: 5.50
    },
    4.1: {
      2.6: 5.20,
      2.7: 5.24,
      2.8: 5.27,
      2.9: 5.24,
      3.0: 5.34,
      3.1: 5.30,
      3.2: 5.41,
      3.3: 5.36,
      3.4: 5.48,
      3.5: 5.52,
      3.6: 5.55
    },
    4.2: {
      2.6: 5.30,
      2.7: 5.33,
      2.8: 5.30,
      2.9: 5.33,
      3.0: 5.40,
      3.1: 5.39,
      3.2: 5.50,
      3.3: 5.46,
      3.4: 5.50,
      3.5: 5.61,
      3.6: 5.60
    },
    4.3: {
      2.6: 5.35,
      2.7: 5.43,
      2.8: 5.41,
      2.9: 5.43,
      3.0: 5.47,
      3.1: 5.49,
      3.2: 5.53,
      3.3: 5.56,
      3.4: 5.59,
      3.5: 5.71,
      3.6: 5.65
    },
    4.4: {
      2.6: 5.40,
      2.7: 5.45,
      2.8: 5.50,
      2.9: 5.53,
      3.0: 5.50,
      3.1: 5.59,
      3.2: 5.60,
      3.3: 5.63,
      3.4: 5.70,
      3.5: 5.81,
      3.6: 5.70
    },
    4.5: {
      2.6: 5.45,
      2.7: 5.50,
      2.8: 5.52,
      2.9: 5.63,
      3.0: 5.59,
      3.1: 5.69,
      3.2: 5.66,
      3.3: 5.70,
      3.4: 5.73,
      3.5: 5.91,
      3.6: 5.80
    },
    4.6: {
      2.6: 5.50,
      2.7: 5.60,
      2.8: 5.60,
      2.9: 5.72,
      3.0: 5.70,
      3.1: 5.78,
      3.2: 5.70,
      3.3: 5.76,
      3.4: 5.80,
      3.5: 6.00,
      3.6: 5.90
    },
    4.7: {
      2.6: 5.55,
      2.7: 5.60,
      2.8: 5.63,
      2.9: 5.80,
      3.0: 5.80,
      3.1: 5.80,
      3.2: 5.90,
      3.3: 5.83,
      3.4: 5.87,
      3.5: 6.10,
      3.6: 5.95
    },
    4.8: {
      2.6: 5.60,
      2.7: 5.70,
      2.8: 5.70,
      2.9: 5.92,
      3.0: 5.80,
      3.1: 5.87,
      3.2: 5.90,
      3.3: 5.89,
      3.4: 5.90,
      3.5: 6.10,
      3.6: 6.00
    },
    4.9: {
      2.6: 5.70,
      2.7: 5.70,
      2.8: 5.77,
      2.9: 6.02,
      3.0: 5.84,
      3.1: 5.87,
      3.2: 5.90,
      3.3: 5.95,
      3.4: 5.98,
      3.5: 6.10,
      3.6: 6.05
    },
    5.0: {
      2.6: 5.80,
      2.7: 5.80,
      2.8: 5.80,
      2.9: 5.85,
      3.0: 5.90,
      3.1: 5.87,
      3.2: 6.00,
      3.3: 6.02,
      3.4: 6.10,
      3.5: 6.10,
      3.6: 6.10
    },
    5.1: {
      2.6: 5.85,
      2.7: 5.85,
      2.8: 5.92,
      2.9: 5.92,
      3.0: 5.95,
      3.1: 6.00,
      3.2: 6.06,
      3.3: 6.10,
      3.4: 6.13,
      3.5: 6.20,
      3.6: 6.20
    },
    5.2: {
      2.6: 5.90,
      2.7: 5.94,
      2.8: 6.00,
      2.9: 6.02,
      3.0: 6.00,
      3.1: 6.10,
      3.2: 6.10,
      3.3: 6.18,
      3.4: 6.20,
      3.5: 6.26,
      3.6: 6.30
    },
  };

  List<FeedIngredient> get concentrateItems {
    return [
      FeedIngredient(
          id: 'concentrateSesameSeedMeal',
          name: S.of(context).concentrateSesameSeedMeal,
          weight: 0,
          dmIntake: 92.8,
          meIntake: 12.5,
          cpIntake: 44.9,
          ndfIntake: 24.6,
          caIntake: 1.97,
          pIntake: 1.26,
          cost: 18,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateSorghumGrain',
          name: S.of(context).concentrateSorghumGrain,
          weight: 0,
          dmIntake: 87.4,
          meIntake: 13.5,
          cpIntake: 10.8,
          ndfIntake: 11,
          caIntake: 0.3,
          pIntake: 3.3,
          cost: 18,
          isFodder: false),
      FeedIngredient(
          id: 'concentratePearlMilletGrain',
          name: S.of(context).concentratePearlMilletGrain,
          weight: 0,
          dmIntake: 89.6,
          meIntake: 13.3,
          cpIntake: 12.5,
          ndfIntake: 17.2,
          caIntake: 0.5,
          pIntake: 3.3,
          cost: 18,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateGroundnutMeal',
          name: S.of(context).concentrateGroundnutMeal,
          weight: 0,
          dmIntake: 90,
          meIntake: 12,
          cpIntake: 40,
          ndfIntake: 13,
          caIntake: 0.15,
          pIntake: 0.6,
          cost: 14,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateChickpeaMeal',
          name: S.of(context).concentrateChickpeaMeal,
          weight: 0,
          dmIntake: 89,
          meIntake: 14.1,
          cpIntake: 22.1,
          ndfIntake: 22.8,
          caIntake: 1.7,
          pIntake: 3.9,
          cost: 14,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateMaizeBran',
          name: S.of(context).concentrateMaizeBran,
          weight: 0,
          dmIntake: 88.7,
          meIntake: 11,
          cpIntake: 11.9,
          ndfIntake: 44.2,
          caIntake: 0.03,
          pIntake: 0.05,
          cost: 5,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateBrewersByProductFresh',
          name: S.of(context).concentrateBrewersByProductFresh,
          weight: 0,
          dmIntake: 24.9,
          meIntake: 10,
          cpIntake: 25.9,
          ndfIntake: 49.6,
          caIntake: 3,
          pIntake: 5.8,
          cost: 15,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateMineralLick',
          name: S.of(context).concentrateMineralLick,
          weight: 0,
          dmIntake: 95,
          meIntake: 0,
          cpIntake: 0,
          ndfIntake: 0,
          caIntake: 30,
          pIntake: 10,
          cost: 15,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateSalt',
          name: S.of(context).concentrateSalt,
          weight: 0,
          dmIntake: 0,
          meIntake: 0,
          cpIntake: 0,
          ndfIntake: 0,
          caIntake: 0,
          pIntake: 0,
          cost: 2,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateDryBread',
          name: S.of(context).concentrateDryBread,
          weight: 0,
          dmIntake: 90.7,
          meIntake: 14.5,
          cpIntake: 12.4,
          ndfIntake: 7,
          caIntake: 1,
          pIntake: 6.2,
          cost: 10,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateSorghumBrewersGrainFresh',
          name: S.of(context).concentrateSorghumBrewersGrainFresh,
          weight: 0,
          dmIntake: 31.6,
          meIntake: 13.8,
          cpIntake: 35.5,
          ndfIntake: 35.6,
          caIntake: 1.5,
          pIntake: 8.7,
          cost: 0,
          isFodder: false),
      FeedIngredient(
          id: 'concentrateWheatBran',
          name: S.of(context).concentrateWheatBran,
          weight: 0,
          dmIntake: 87,
          meIntake: 11,
          cpIntake: 17.3,
          ndfIntake: 45.2,
          caIntake: 1.4,
          pIntake: 11.1,
          cost: 0,
          isFodder: false)
    ];
  }

  List<FeedIngredient> get fodderItems {
    return [
      FeedIngredient(
          id: 'fodderGreenMaizeForage',
          name: S.of(context).fodderGreenMaizeForage,
          weight: 0,
          dmIntake: 23.3,
          meIntake: 9.6,
          cpIntake: 7.9,
          ndfIntake: 63.2,
          caIntake: 0.36,
          pIntake: 0.2,
          cost: 2.50,
          isFodder: true),
      FeedIngredient(
          id: 'fodderAlfafa',
          name: S.of(context).fodderAlfafa,
          weight: 0,
          dmIntake: 19.9,
          meIntake: 9.4,
          cpIntake: 20.6,
          ndfIntake: 39.3,
          caIntake: 19.4,
          pIntake: 2.5,
          cost: 6.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderBananaStalks',
          name: S.of(context).fodderBananaStalks,
          weight: 0,
          dmIntake: 7.2,
          meIntake: 16.9,
          cpIntake: 5.1,
          ndfIntake: 57.5,
          caIntake: 0.75,
          pIntake: 0.29,
          cost: 0,
          isFodder: true),
      FeedIngredient(
          id: 'fodderBananaLeaves',
          name: S.of(context).fodderBananaLeaves,
          weight: 0,
          dmIntake: 20.7,
          meIntake: 18.1,
          cpIntake: 9.5,
          ndfIntake: 1.67,
          caIntake: 0.12,
          pIntake: 0,
          cost: 0,
          isFodder: true),
      FeedIngredient(
          id: 'fodderSorghumForage',
          name: S.of(context).fodderSorghumForage,
          weight: 0,
          dmIntake: 28.1,
          meIntake: 8.8,
          cpIntake: 8.2,
          ndfIntake: 57.9,
          caIntake: 0.41,
          pIntake: 0.2,
          cost: 0,
          isFodder: true),
      FeedIngredient(
          id: 'fodderSorghumStalk',
          name: S.of(context).fodderSorghumStalk,
          weight: 0,
          dmIntake: 93.3,
          meIntake: 7.3,
          cpIntake: 3.7,
          ndfIntake: 76.6,
          caIntake: 0.31,
          pIntake: 0.07,
          cost: 5.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderMaizeSilage',
          name: S.of(context).fodderMaizeSilage,
          weight: 0,
          dmIntake: 23.5,
          meIntake: 10.5,
          cpIntake: 8.9,
          ndfIntake: 49.3,
          caIntake: 0.21,
          pIntake: 0.19,
          cost: 0,
          isFodder: true),
      FeedIngredient(
          id: 'fodderSorghumBiProductResidue',
          name: S.of(context).fodderSorghumBiProductResidue,
          weight: 0,
          dmIntake: 89.8,
          meIntake: 13.2,
          cpIntake: 11.7,
          ndfIntake: 42.9,
          caIntake: 0.9,
          pIntake: 4.9,
          cost: 4.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderPearlMilletStalk',
          name: S.of(context).fodderPearlMilletStalk,
          weight: 0,
          dmIntake: 93.1,
          meIntake: 6.3,
          cpIntake: 5.2,
          ndfIntake: 80,
          caIntake: 2.5,
          pIntake: 1.5,
          cost: 5.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderPearlMilletFreshForage',
          name: S.of(context).fodderPearlMilletFreshForage,
          weight: 0,
          dmIntake: 19.4,
          meIntake: 9.2,
          cpIntake: 12.4,
          ndfIntake: 64.8,
          caIntake: 5.5,
          pIntake: 2.8,
          cost: 16.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderWheatStraw',
          name: S.of(context).fodderWheatStraw,
          weight: 0,
          dmIntake: 91,
          meIntake: 6.8,
          cpIntake: 4.2,
          ndfIntake: 77.8,
          caIntake: 4.8,
          pIntake: 0.7,
          cost: 2.80,
          isFodder: true),
      FeedIngredient(
          id: 'fodderBarleyStraw',
          name: S.of(context).fodderBarleyStraw,
          weight: 0,
          dmIntake: 90.9,
          meIntake: 6.5,
          cpIntake: 3.8,
          ndfIntake: 80.5,
          caIntake: 4.6,
          pIntake: 1,
          cost: 2.80,
          isFodder: true),
      FeedIngredient(
          id: 'fodderCabbage',
          name: S.of(context).fodderCabbage,
          weight: 0,
          dmIntake: 12,
          meIntake: 18,
          cpIntake: 16.6,
          ndfIntake: 20,
          caIntake: 2.1,
          pIntake: 0.6,
          cost: 2.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderElephantGrass',
          name: S.of(context).fodderElephantGrass,
          weight: 0,
          dmIntake: 17.9,
          meIntake: 8.2,
          cpIntake: 9.7,
          ndfIntake: 39.3,
          caIntake: 3.6,
          pIntake: 2.9,
          cost: 3.50,
          isFodder: true),
      FeedIngredient(
          id: 'fodderEragrostisTefHay',
          name: S.of(context).fodderEragrostisTefHay,
          weight: 0,
          dmIntake: 91.7,
          meIntake: 8.6,
          cpIntake: 14.6,
          ndfIntake: 56.6,
          caIntake: 4.7,
          pIntake: 2.6,
          cost: 3.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderBananaFruit',
          name: S.of(context).fodderBananaFruit,
          weight: 0,
          dmIntake: 21.9,
          meIntake: 11.3,
          cpIntake: 5.2,
          ndfIntake: 16.2,
          caIntake: 0.2,
          pIntake: 0.9,
          cost: 1.25,
          isFodder: true),
      FeedIngredient(
          id: 'fodderWildGrassFresh',
          name: S.of(context).fodderWildGrassFresh,
          weight: 0,
          dmIntake: 38.2,
          meIntake: 7.6,
          cpIntake: 9,
          ndfIntake: 73.3,
          caIntake: 2,
          pIntake: 1.2,
          cost: 3.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderWildGrassHay',
          name: S.of(context).fodderWildGrassHay,
          weight: 0,
          dmIntake: 91.7,
          meIntake: 8.6,
          cpIntake: 14.6,
          ndfIntake: 56.6,
          caIntake: 4.7,
          pIntake: 2.6,
          cost: 3.00,
          isFodder: true),
      FeedIngredient(
          id: 'fodderElephantGrassHay',
          name: S.of(context).fodderElephantGrassHay,
          weight: 0,
          dmIntake: 89.3,
          meIntake: 7.9,
          cpIntake: 10.3,
          ndfIntake: 71.1,
          caIntake: 2.8,
          pIntake: 2.3,
          cost: 3.50,
          isFodder: true),
      FeedIngredient(
          id: 'fodderBarleyHay',
          name: S.of(context).fodderBarleyHay,
          weight: 0,
          dmIntake: 84.9,
          meIntake: 9.3,
          cpIntake: 8.7,
          ndfIntake: 53.1,
          caIntake: 2.1,
          pIntake: 2.8,
          cost: 2.80,
          isFodder: true),
      FeedIngredient(
          id: 'fodderWheatHay',
          name: S.of(context).fodderWheatHay,
          weight: 0,
          dmIntake: 84.9,
          meIntake: 7.8,
          cpIntake: 5.4,
          ndfIntake: 54.2,
          caIntake: 0.25,
          pIntake: 0.2,
          cost: 2.80,
          isFodder: true),
    ];
  }
}
